{
	"contexts": [
		{
			"id": "deferred_light",
			"params": [
				{
					"id": "depth_write",
					"value": "false"
				},
				{
					"id": "compare_mode",
					"value": "always"
				},
				{
					"id": "cull_mode",
					"value": "none"
				},
				{
					"id": "blend_source",
					"value": "blend_one"
				},
				{
					"id": "blend_destination",
					"value": "blend_one"
				},
				{
					"id": "blend_operation",
					"value": "add"
				},
				{
					"id": "alpha_blend_source",
					"value": "blend_one"
				},
				{
					"id": "alpha_blend_destination",
					"value": "blend_one"
				},
				{
					"id": "alpha_blend_operation",
					"value": "add"
				}
			],
			"links": [
				{
					"id": "lightPos",
					"link": "_lightPosition"
				},
				{
					"id": "lightDir",
					"link": "_lightDirection"
				},
				{
					"id": "lightType",
					"link": "_lightType"
				},
				{
					"id": "lightIndex",
					"link": "_lightIndex"
				},
				{
					"id": "lightColor",
					"link": "_lightColor"
				},
				{
					"id": "lightStrength",
					"link": "_lightStrength"
				},
				{
					"id": "lightBias",
					"link": "_lightBias"
				},
				{
					"id": "spotlightCutoff",
					"link": "_spotlightCutoff"
				},
				{
					"id": "spotlightExponent",
					"link": "_spotlightExponent"
				},
				{
					"id": "eye",
					"link": "_cameraPosition"
				},
				{
					"id": "eyeLook",
					"link": "_cameraLook"
				},
				{
					"id": "invVP",
					"link": "_inverseViewProjectionMatrix"
				},
				{
					"id": "LMVP",
					"link": "_biasLightModelViewProjectionMatrix"
				},
				{
					"id": "shirr",
					"link": "_envmapIrradiance"
				},
				{
					"id": "senvmapRadiance",
					"link": "_envmapRadiance",
					"ifdef": ["_Rad"]
				},
				{
					"id": "envmapNumMipmaps",
					"link": "_envmapNumMipmaps",
					"ifdef": ["_Rad"]
				},
				{
					"id": "senvmapBrdf",
					"link": "_envmapBrdf",
					"ifdef": ["_Rad"]
				},
				{
					"id": "envmapStrength",
					"link": "_envmapStrength"
				},
				{
					"id": "sltcMat",
					"link": "_ltcMat",
					"ifdef": ["_PolyLight"]
				},
				{
					"id": "sltcMag",
					"link": "_ltcMag",
					"ifdef": ["_PolyLight"]
				},
				{
					"id": "time",
					"link": "_time",
					"ifdef": ["_PolyLight"]
				}
			],
			"vertex_shader": "deferred_light.vert.glsl",
			"fragment_shader": "deferred_light.frag.glsl"
		}
	]
}
